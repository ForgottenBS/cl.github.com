1、什么是关系型数据库
关系模型把世界看作是由实体和联系组成的。而关系型数据库是将数据库表做为实体，以数据库表的主键和外键的关联关系描述联系的一种数据库结构。

2、什么是主键，什么是外键？
主键：用一个唯一的标识符来标识每一行，这个标识符就是主键。主键具有两个特点：非空和不能重复。
外键：外键是用来表达表和表之间的关联关系。通过外键列去引用主表的主键列的方式描述表间关系。

3、描述关系型数据库中的三种关系
一对一：一条主表记录和一条从表记录相关联。同时一条从表记录也和一条主表记录相关联。
一对多：一条主表记录和多条从表记录相关联。一条从表记录只和一条主表记录相关联。
多对多：一条主表记录和多条从表记录相关联。同时一条从表记录也和多条主表记录相关联。通过中间表来描述这种多对多关系。

4、结构化查询语言SQL的分类
数据定义语言（DDL）创建、修改、删除数据库的内部数据结构
数据查询语言（DQL）用于数据库中数据的查询
数据操作语言（DML）用于数据库中数据的修改，包括添加、删除、修改等
数据控制语言（DCL）控制数据库访问权限。

5、如何创建数据库？如何删除数据库？如何创建表？如何删除表？
创建数据库:create database 库名。
如何删除数据库：drop database 库名。
如何创建表：create table 表名(字段列表)
如何删除表：drop table 表名。

6、什么是索引？
索引是对数据库表中一列或多列的值进行排序的一种结构，使用索引可快速访问数据库表中的特定信息。

7、数据完整性的分类
实体完整性：保证一行数据是有效的。主要实现：主键约束和唯一约束
域完整性：保证一列数据是有效的。主要实现：非空、默认值、检查约束
引用完整性：保证引用的编号是有效的。主要实现：外键约束
用户自定义完整性：保证用户自定义规则。主要实现：存储过程和触发器

8、如何定义主键约束和外键约束
主键约束：primary key
外键约束：ALTER TABLE 从表名 ADD CONSTRAINT 外键约束名 FOREIGN KEY(外键列名) REFERENCES 主表名(主键名)

9、外键和外键约束的区别：
外键是指从表的某列与主表的某列存在依附关系
外键约束是指在外键关联主键上强制加上一个约束，如果违反该约束，则不允许该条数据的修改。
所以没有建立外键约束不等于没有外键。

10、添加、删除、修改的SQL语句如何书写？
添加：insert into 表名(字段列表) values(字段列表的值)
删除：delete from 表名 where 条件
修改：update 表名 set 修改字段的新值 where 条件

11、如何查询表全部数据？如何按字符串字段模糊查询？_和%的区别。
查询全部数据：select * from 表名
按字符串字段模糊查询：select * from 表名 where 字段名 like '%值%'
_表示任意一个字符。%表示任意零个或多个字符。

12、如何去除重复记录，如何得到查询结果限定行数的记录
去除重复记录：distinct
查询结果限定行数的记录：limit 0,3

13、and和or的区别。in在什么时候使用。
and和or都在where后使用。and表示结果都为真，才返回记录。or表示只要有一个结果为真都返回记录。
in表示在指定的某几个值中进行搜索。一般来说，如果比较条件中，如果出现了多个值就应该用in表示。而>、<、=一般只能比较一个值。

14、如何处理null值？
处理null，要使用 is null和 is not null。不能用=或!=

15、如何排序？如何表示升序或降序？
排序：order by 字段名
升序：asc    降序：desc    默认是升序

16、聚合函数有哪些？
COUNT：统计行数量
SUM：获取单个列的合计值
AVG：计算某个列的平均值
MAX：计算列的最大值
MIN：计算列的最小值

17、count(*)和count(列名)的区别
count(*)会计算所有的记录，count(列名)表示只计算该列值不为null的记录

18、分组时，查询的字段可以是什么字段。
分组时，查询的字段可以是分组字段，也可以是聚合函数

19、HAVING和WHERE区别
二者都是过滤条件，WHERE运行在分组前，因此不能执行任何聚合函数。HAVING是运行在分组后，只能用做聚合函数的过滤。

20、描述SQL查询语句执行顺序
第一步：执行FROM
第二步：WHERE条件过滤
第三步：GROUP BY分组
第四步：执行SELECT投影列
第五步：HAVING条件过滤
第六步：执行ORDER BY 排序

21、内联接和外联接的区别
内联接是指使用比较运算符根据每个表共有的列的值匹配两个表中的行。
外联接是指不管有没有匹配，被定义了外联接的表数据都要出现在结果中。

22、如何进行表联接查询
内联接：select 字段列名 from 主表 join 从表 on 主键=外键。
		select 字段列名 from 主表,从表 where 主键=外键。
		
外联接：select 字段列名 from 主表 left join 从表 on 主键=外键

23、什么是JDBC
JDBC是java连接数据库的一套规范，该规范规定了一系列的接口，由厂商根据自己数据库的特点书写实现类，用户根据接口调用方法，可以屏蔽不同数据库的差异。无论连接什么数据库都是一套API。


24、Statement和PreparedStatement的区别
Statement是PreparedStatement的父接口，使用拼接字符串的方式填充SQL语句中的值，所以，当值不同的时候，JDBC会重新编译SQL语句，效率低，而且容易造成SQL注入。
PreparedStatement提供了占位符方式设置SQL语句，JDBC不会重新编译SQL语句，而且无论是什么值都当做字符串处理，不会造成SQL注入。

25、什么是SQL注入。
当采用拼接字符串方式填充SQL语句的值，如果值中有SQL语句的关键字或非法字符，那么会造成执行SQL语句错误或执行结果不正确的情况。这叫做SQL注入。

26、什么是三层架构
三层架构即：表现层、业务层、持久层。每一层完成即定的功能，层与层之间用接口做耦合。每一层的组件可以单独测试，当其中一个组件更换或修改后，不会影响别的层的组件。
持久层：用于完成数据库相关的操作。采用DAO模式，创建实体类和数据库表做映射，也就是哪个类对应哪个表，哪个属性对应哪个列。而持久层的目的就是完成对象数据和关系数据的转换。
业务层：用于业务处理。采用事务脚本模式。将一次请求中所有的业务封装成一个方法，保证方法中所有的数据库更新操作同时成功，同时失败。不允许部分成功，部分失败，这样引起数据混乱的情况发生。
表现层：采用MVC模式。M表示模型，就是实体类，用于数据的封装和数据的传输。V表示视图，用于展示数据和接收数据。C表示控制，用于调用业务组件，完成业务流程的控制。
